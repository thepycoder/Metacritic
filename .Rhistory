library(plotly)
library(ggplot2)
library(reshape2)
####### Define Cost Function #########
minimal_cost <- function(hours, kilometers, options, verbose = FALSE) {
i <- 1
costvector <- numeric(0)
namevector <- character(0)
### Petrol Car ###
if ("Petrol Car" %in% options) {
purchase <- 4000
lifetime <- 3
insurance <- 600
petrolprice <- 1.61
fuelconsumption <- 6.0
taxes <- 400
maintenance <- 600
parking <- 600
costvector[i] <- (purchase/lifetime) + insurance + taxes + maintenance + parking + fuelconsumption*(kilometers/100)*petrolprice
namevector[i] <- "Petrol Car"
i <- i + 1
}
####################
### Electric Car ###
if ("Electric Car" %in% options) {
purchase <- 10000
lifetime <- 3
insurance <- 600
maintenance <- 200
parking <- 600
costvector[i] <- (purchase/lifetime) + insurance + maintenance + parking
namevector[i] <- "Electric Car"
i <- i + 1
}
######################
### Partago Bundel ###
if ("Partago Bundel" %in% options) {
hourprice <- 2.71
kilometerprice <- 0.17
costvector[i] <- hours*hourprice + kilometers*kilometerprice
namevector[i] <- "Partago Bundel"
i <- i + 1
}
####################
### Partago Klein ###
if ("Partago Klein" %in% options) {
subscription <- 95
hourprice <- 2.25
kilometerprice <- 0.15
costvector[i] <- subscription + hourprice*hours + kilometerprice*kilometers
namevector[i] <- "Partago Klein"
i <- i + 1
}
####################
### Cambio Start ###
if ("Cambio Start" %in% options) {
subscription <- 4
hourprice <- 2
kilometerprice <- 0.35
costvector[i] <- subscription + hourprice*hours + kilometerprice*kilometers
namevector[i] <- "Cambio Start"
i <- i + 1
}
####################
### Cambio Bonus ###
if ("Cambio Bonus" %in% options) {
subscription <- 8
hourprice <- 1.75
kilometerprice <- 0.26
costvector[i] <- subscription + hourprice*hours + kilometerprice*kilometers
namevector[i] <- "Cambio Bonus"
i <- i + 1
}
####################
### Cambio Comfort ###
if ("Cambio Comfort" %in% options) {
subscription <- 22
hourprice <- 1.55
kilometerprice <- 0.23
costvector[i] <- subscription + hourprice*hours + kilometerprice*kilometers
namevector[i] <- "Cambio Comfort"
i <- i + 1
}
##############################
### Netabonnement + De lijn ##
if ("Netabonnement" %in% options) {
train <- 3097
bus <- 169
costvector[i] <- train + bus
namevector[i] <- "Netabonnement"
i <- i + 1
}
if (verbose) {
print(data.frame(namevector, costvector))
}
return(namevector[which.min(costvector)])
}
hour_range <- seq(0,2500,by=5)
kilometer_range <- seq(0, 25000, by=50)
options <- c("Cambio Start",
"Cambio Bonus",
"Cambio Comfort",
"Petrol Car",
"Electric Car",
#"Netabonnement",
"Partago Klein",
"Partago Bundel"
)
result <- expand.grid(hour_range, kilometer_range)
result$Transport <- mapply(minimal_cost, result$Var1, result$Var2, MoreArgs = list(options))
colnames(result) <- c("Hours", "Kilometers", "Transport")
p <- ggplot(data = result, aes(x = Hours, y = Kilometers))
p + geom_tile(aes(fill = Transport)) +
geom_point(aes(x=440, y=16110), color="red") +
geom_point(aes(x=492.75, y=13486.75), color="green")
## Belgie
minimal_cost(492.75, 13486.75, options, verbose = TRUE)
p <- ggplot(data = result, aes(x = Hours, y = Kilometers))
setwd("~/Projects/metacritic")
metacritic <- read.csv('output.csv')
View(metacritic)
hist(metacritic$Meta.Score)
hist(metacritic$User.Score)
hist(metacritic$Release.Date)
metacritic$User.Score <- as.numeric(metacritic$User.Score)
metacritic <- read.csv('output.csv')
metacritic$User.Score.2 <- as.numeric(metacritic$User.Score)
metacritic <- read.csv('output.csv')
metacritic$User.Score.2 <- as.numeric(as.character(metacritic$User.Score))
View(metacritic)
is.na(metacritic$User.Score.2)
metacritic <- read.csv('output.csv')
metacritic$User.Score <- as.numeric(as.character(metacritic$User.Score))
hist(metacritic$Meta.Score)
hist(metacritic$User.Score)
hist(metacritic$Meta.Score)
hist(metacritic$User.Score)
write.csv(metacritic, file = "metacritic_pc.csv")
metacritic$Release.Date <- as.Date(as.character(metacritic$Release.Date))
table(metacritic$Release.Date)
max(table(metacritic$Release.Date))
head(table(metacritic$Release.Date))
metacritic$Release.Date <- as.Date(as.character(metacritic$Release.Date))
metacritic <- read.csv('output.csv', na.strings=c("","NA"))
metacritic$User.Score <- as.numeric(as.character(metacritic$User.Score))
metacritic$Release.Date <- as.Date(as.character(metacritic$Release.Date))
head(table(metacritic$Release.Date))
metacritic$Release.Date <- as.Date(as.character(metacritic$Release.Date), format="%b %d, %Y")
metacritic <- read.csv('output.csv', na.strings=c("","NA"))
metacritic$User.Score <- as.numeric(as.character(metacritic$User.Score))
metacritic$Release.Date <- as.Date(as.character(metacritic$Release.Date), format="%b %d, %Y")
plot(metacritic$Release.Date)
hist(metacritic$Release.Date)
?hist
hist(metacritic$Release.Date, breaks = 1000)
muh <- table(metacritic$Release.Date)
sort(muh)
head(muh)
sort(muh, decreasing = TRUE)
head(muh)
muh <- sort(muh, decreasing = TRUE)
head(muh)
head(muh, 20)
hist(metacritic$Meta.Score)
top <- subset(metacritic,
Release.Date > as.Date("2012-01-01")
& Meta.Score > 80
& User.Score > 8)
View(top)
metacritic$allscore <- metacritic$Meta.Score + 10*metacritic$User.Score
metacritic <- read.csv('output.csv', na.strings=c("","NA"))
metacritic$User.Score <- as.numeric(as.character(metacritic$User.Score))
metacritic$Release.Date <- as.Date(as.character(metacritic$Release.Date), format="%b %d, %Y")
metacritic$Allscore <- metacritic$Meta.Score + 10*metacritic$User.Score
top_all <- subset(metacritic,
Release.Date > as.Date("2012-01-01")
& Allscore > 160)
View(top_all)
